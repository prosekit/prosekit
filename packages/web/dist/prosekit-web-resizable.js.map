{"version":3,"file":"prosekit-web-resizable.js","names":["onResizeContext: Context<OnResize>","onResizeStartContext: Context<OnResizeStart>","onResizeEndContext: Context<OnResizeEnd>","calcBottomRightResize: CalcResize","calcBottomLeftResize: CalcResize","calcTopRightResize: CalcResize","calcTopLeftResize: CalcResize","calcTopResize: CalcResize","calcRightResize: CalcResize","calcBottomResize: CalcResize","calcLeftResize: CalcResize","resizableHandleProps: PropDeclarations<ResizableHandleProps>","resizableHandleEvents: EventDeclarations<ResizableHandleEvents>","ResizableHandleElementBase: BaseElementConstructor<ResizableHandleProps>","onResizeStart: OnResizeStart","aspectRatio: number","onResize: OnResize","onResizeEnd: OnResizeEnd","resizableRootProps: PropDeclarations<ResizableRootProps>","resizableRootEvents: EventDeclarations<ResizableRootEvents>","ResizableRootElementBase: BaseElementConstructor<ResizableRootProps>"],"sources":["../src/components/resizable/context.ts","../src/utils/is-finite-positive-number.ts","../src/components/resizable/resizable-handle/calc-resize.ts","../src/components/resizable/resizable-handle/setup.ts","../src/components/resizable/resizable-handle/types.ts","../src/components/resizable/resizable-handle/element.gen.ts","../src/components/resizable/resizable-root/setup.ts","../src/components/resizable/resizable-root/types.ts","../src/components/resizable/resizable-root/element.gen.ts"],"sourcesContent":["import {\n  createContext,\n  type Context,\n} from '@aria-ui/core'\n\n/**\n * @internal\n */\nexport const onResizeContext: Context<OnResize> = createContext(\n  'prosekit/resizable/onResize',\n  null,\n)\n\n/**\n * @internal\n */\nexport const onResizeStartContext: Context<OnResizeStart> = createContext(\n  'prosekit/resizable/onResizeStart',\n  null,\n)\n\n/**\n * @internal\n */\nexport const onResizeEndContext: Context<OnResizeEnd> = createContext(\n  'prosekit/resizable/onResizeEnd',\n  null,\n)\n\n/**\n * @internal\n */\nexport type OnResize = ((width: number, height: number) => void) | null\n\n/**\n * @internal\n */\nexport type OnResizeStart =\n  | (() => readonly [width: number, height: number, aspectRatio: number])\n  | null\n\n/**\n * @internal\n */\nexport type OnResizeEnd = (() => void) | null\n","export function isFinitePositiveNumber(value: unknown): value is number {\n  return typeof value === 'number' && Number.isFinite(value) && value > 0\n}\n","import { isFinitePositiveNumber } from '../../../utils/is-finite-positive-number'\n\nexport function calcResize(\n  position:\n    | 'top'\n    | 'right'\n    | 'bottom'\n    | 'left'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n  w: number,\n  h: number,\n  dx: number,\n  dy: number,\n  aspectRatio: number | null | undefined,\n): [w: number, h: number] {\n  aspectRatio = aspectRatio ? aspectRatio : w / h\n  aspectRatio = isFinitePositiveNumber(aspectRatio) ? aspectRatio : 1\n\n  switch (position) {\n    case 'bottom-right':\n      return clamp(calcBottomRightResize(w, h, dx, dy, aspectRatio))\n    case 'bottom-left':\n      return clamp(calcBottomLeftResize(w, h, dx, dy, aspectRatio))\n    case 'top-right':\n      return clamp(calcTopRightResize(w, h, dx, dy, aspectRatio))\n    case 'top-left':\n      return clamp(calcTopLeftResize(w, h, dx, dy, aspectRatio))\n    case 'top':\n      return clamp(calcTopResize(w, h, dx, dy, aspectRatio))\n    case 'right':\n      return clamp(calcRightResize(w, h, dx, dy, aspectRatio))\n    case 'bottom':\n      return clamp(calcBottomResize(w, h, dx, dy, aspectRatio))\n    case 'left':\n      return clamp(calcLeftResize(w, h, dx, dy, aspectRatio))\n    default:\n      throw new RangeError(`Invalid position: ${position}`)\n  }\n}\n\ntype CalcResize = (\n  w: number,\n  h: number,\n  dx: number,\n  dy: number,\n  aspectRatio: number,\n) => [w: number, h: number]\n\nconst calcBottomRightResize: CalcResize = (w, h, dx, dy, r) => {\n  w += dx\n  h += dy\n\n  const sum = w + h\n  h = sum / (r + 1)\n  w = sum - h\n  return [w, h]\n}\n\nconst calcBottomLeftResize: CalcResize = (w, h, dx, dy, r) => {\n  w -= dx\n  h += dy\n\n  const sum = w + h\n  h = sum / (r + 1)\n  w = sum - h\n  return [w, h]\n}\n\nconst calcTopRightResize: CalcResize = (w, h, dx, dy, r) => {\n  w += dx\n  h -= dy\n\n  const sum = w + h\n  h = sum / (r + 1)\n  w = sum - h\n  return [w, h]\n}\n\nconst calcTopLeftResize: CalcResize = (w, h, dx, dy, r) => {\n  w -= dx\n  h -= dy\n\n  const sum = w + h\n  h = sum / (r + 1)\n  w = sum - h\n  return [w, h]\n}\n\nconst calcTopResize: CalcResize = (w, h, dx, dy, r) => {\n  h -= dy\n  w = h * r\n  return [w, h]\n}\n\nconst calcRightResize: CalcResize = (w, h, dx, dy, r) => {\n  w += dx\n  h = w / r\n  return [w, h]\n}\n\nconst calcBottomResize: CalcResize = (w, h, dx, dy, r) => {\n  h += dy\n  w = h * r\n  return [w, h]\n}\n\nconst calcLeftResize: CalcResize = (w, h, dx, dy, r) => {\n  w -= dx\n  h = w / r\n  return [w, h]\n}\n\nfunction clamp([w, h]: [number, number]): [number, number] {\n  return [\n    Math.max(w, 1),\n    Math.max(h, 1),\n  ]\n}\n","import {\n  createSignal,\n  useEffect,\n  type ConnectableElement,\n  type ReadonlySignal,\n  type SignalState,\n} from '@aria-ui/core'\nimport { getWindow } from '@ocavue/utils'\n\nimport {\n  onResizeContext,\n  onResizeEndContext,\n  onResizeStartContext,\n  type OnResize,\n  type OnResizeEnd,\n  type OnResizeStart,\n} from '../context'\n\nimport { calcResize } from './calc-resize'\nimport type { ResizableHandleProps } from './types'\n\n/**\n * @internal\n */\nexport function useResizableHandle(\n  host: ConnectableElement,\n  { state }: { state: SignalState<ResizableHandleProps> },\n): void {\n  const onResize = onResizeContext.consume(host)\n  const onResizeStart = onResizeStartContext.consume(host)\n  const onResizeEnd = onResizeEndContext.consume(host)\n\n  useResizableHandleState(host, state, { onResize, onResizeStart, onResizeEnd })\n}\n\nfunction useResizableHandleState(\n  host: ConnectableElement,\n  state: SignalState<ResizableHandleProps>,\n  context: {\n    onResizeStart: ReadonlySignal<OnResizeStart>\n    onResize: ReadonlySignal<OnResize>\n    onResizeEnd: ReadonlySignal<OnResizeEnd>\n  },\n) {\n  let startX = 0\n  let startY = 0\n  let width = 0\n  let height = 0\n  let aspectRatio = 1\n\n  const pointerPressing = createSignal(false)\n\n  const handlePointerDown = (event: PointerEvent) => {\n    event.preventDefault()\n    pointerPressing.set(true)\n\n    startX = event.x\n    startY = event.y\n\n    const size = context.onResizeStart.get()?.()\n    if (size) {\n      ;[width, height, aspectRatio] = size\n    }\n  }\n\n  const handlePointerMove = (event: PointerEvent) => {\n    event.preventDefault()\n\n    const dx = event.x - startX\n    const dy = event.y - startY\n\n    const [w, h] = calcResize(\n      state.position.peek(),\n      width,\n      height,\n      dx,\n      dy,\n      aspectRatio,\n    )\n\n    context.onResize.get()?.(w, h)\n  }\n\n  const handlePointerUp = (event: PointerEvent) => {\n    event.preventDefault()\n    pointerPressing.set(false)\n\n    context.onResizeEnd.get()?.()\n  }\n\n  useEffect(host, () => {\n    host.addEventListener('pointerdown', handlePointerDown)\n    return () => {\n      host.removeEventListener('pointerdown', handlePointerDown)\n    }\n  })\n\n  useEffect(host, () => {\n    if (!pointerPressing.get()) {\n      return\n    }\n\n    const win = getWindow(host)\n\n    win.addEventListener('pointermove', handlePointerMove)\n    win.addEventListener('pointerup', handlePointerUp)\n    return () => {\n      win.removeEventListener('pointermove', handlePointerMove)\n      win.removeEventListener('pointerup', handlePointerUp)\n    }\n  })\n}\n","import type {\n  EventDeclarations,\n  PropDeclarations,\n} from '@aria-ui/core'\n\nexport interface ResizableHandleProps {\n  /**\n   * The position of the handle.\n   *\n   * @default \"bottom-right\"\n   */\n  position:\n    | 'top'\n    | 'right'\n    | 'bottom'\n    | 'left'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right'\n}\n\n/** @internal */\nexport const resizableHandleProps: PropDeclarations<ResizableHandleProps> = {\n  position: { default: 'bottom-right' },\n}\n\n/** @internal */\nexport interface ResizableHandleEvents {}\n\n/** @internal */\nexport const resizableHandleEvents: EventDeclarations<ResizableHandleEvents> = {}\n","import { defineCustomElement, registerCustomElement, type BaseElementConstructor } from \"@aria-ui/core\"\n\nimport { useResizableHandle } from \"./setup\"\nimport { resizableHandleEvents, resizableHandleProps, type ResizableHandleEvents, type ResizableHandleProps } from \"./types\"\n\nconst ResizableHandleElementBase: BaseElementConstructor<ResizableHandleProps> = defineCustomElement<\n  ResizableHandleProps,\n  ResizableHandleEvents\n>({\n  props: resizableHandleProps,\n  events: resizableHandleEvents,\n  setup: useResizableHandle,\n})\nclass ResizableHandleElement extends ResizableHandleElementBase {}\n\nregisterCustomElement('prosekit-resizable-handle', ResizableHandleElement)\n  \nexport { ResizableHandleElement }\n","import {\n  createSignal,\n  useAttribute,\n  useEffect,\n  type ConnectableElement,\n  type SetupOptions,\n} from '@aria-ui/core'\n\nimport { isFinitePositiveNumber } from '../../../utils/is-finite-positive-number'\nimport {\n  onResizeContext,\n  onResizeEndContext,\n  onResizeStartContext,\n  type OnResize,\n  type OnResizeEnd,\n  type OnResizeStart,\n} from '../context'\n\nimport type {\n  ResizableRootEvents,\n  ResizableRootProps,\n} from './types'\n\n/**\n * @internal\n */\nexport function useResizableRoot(\n  host: ConnectableElement,\n  { state, emit }: SetupOptions<ResizableRootProps, ResizableRootEvents>,\n): void {\n  const resizing = createSignal(false)\n\n  const onResizeStart: OnResizeStart = () => {\n    const { width, height } = host.getBoundingClientRect()\n\n    let aspectRatio: number = state.aspectRatio.peek() ?? width / height\n\n    if (!isFinitePositiveNumber(aspectRatio)) {\n      aspectRatio = 0\n    }\n\n    emit('resizeStart', { width, height })\n    resizing.set(true)\n    return [width, height, aspectRatio]\n  }\n\n  const onResize: OnResize = (width, height) => {\n    state.width.set(width)\n    state.height.set(height)\n  }\n\n  const onResizeEnd: OnResizeEnd = () => {\n    const { width, height } = host.getBoundingClientRect()\n    emit('resizeEnd', { width, height })\n    resizing.set(false)\n  }\n\n  onResizeStartContext.provide(host, createSignal(onResizeStart))\n  onResizeContext.provide(host, createSignal(onResize))\n  onResizeEndContext.provide(host, createSignal(onResizeEnd))\n\n  useEffect(host, () => {\n    updateResizableRootStyles(\n      host,\n      Math.max(state.width.get() || 0, 1),\n      Math.max(state.height.get() || 0, 1),\n      state.aspectRatio.get(),\n    )\n  })\n\n  useAttribute(host, 'data-resizing', () => (resizing.get() ? '' : undefined))\n}\n\nfunction updateResizableRootStyles(\n  host: ConnectableElement,\n  width: number,\n  height: number,\n  aspectRatio: number | null,\n) {\n  host.style.width = isFinitePositiveNumber(width) ? `${width}px` : ''\n\n  host.style.height = isFinitePositiveNumber(height) ? `${height}px` : ''\n\n  if (isFinitePositiveNumber(aspectRatio)) {\n    host.style.aspectRatio = `${aspectRatio}`\n\n    if (width && width > 0 && aspectRatio >= 1) {\n      host.style.height = 'auto'\n    } else if (height && height > 0 && aspectRatio <= 1) {\n      host.style.width = 'min-content'\n    }\n  }\n}\n","import type {\n  EventDeclarations,\n  PropDeclarations,\n} from '@aria-ui/core'\n\nexport interface ResizableRootProps {\n  width: number | null\n  height: number | null\n  aspectRatio: number | null\n}\n\n/** @internal */\nexport const resizableRootProps: PropDeclarations<ResizableRootProps> = {\n  width: { default: null },\n  height: { default: null },\n  aspectRatio: { default: null },\n}\n\nexport interface ResizableRootEvents {\n  resizeStart: CustomEvent<{ width: number; height: number }>\n  resizeEnd: CustomEvent<{ width: number; height: number }>\n}\n\n/** @internal */\nexport const resizableRootEvents: EventDeclarations<ResizableRootEvents> = {\n  resizeStart: {},\n  resizeEnd: {},\n}\n","import { defineCustomElement, registerCustomElement, type BaseElementConstructor } from \"@aria-ui/core\"\n\nimport { useResizableRoot } from \"./setup\"\nimport { resizableRootEvents, resizableRootProps, type ResizableRootEvents, type ResizableRootProps } from \"./types\"\n\nconst ResizableRootElementBase: BaseElementConstructor<ResizableRootProps> = defineCustomElement<\n  ResizableRootProps,\n  ResizableRootEvents\n>({\n  props: resizableRootProps,\n  events: resizableRootEvents,\n  setup: useResizableRoot,\n})\nclass ResizableRootElement extends ResizableRootElementBase {}\n\nregisterCustomElement('prosekit-resizable-root', ResizableRootElement)\n  \nexport { ResizableRootElement }\n"],"mappings":"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"}