{"version":3,"file":"prosekit-extensions-italic.js","names":[],"sources":["../src/italic/italic-commands.ts","../src/italic/italic-input-rule.ts","../src/italic/italic-keymap.ts","../src/italic/italic-spec.ts","../src/italic/italic.ts"],"sourcesContent":["import {\n  defineCommands,\n  toggleMark,\n  type Extension,\n} from '@prosekit/core'\n\n/**\n * @internal\n */\nexport type ItalicCommandsExtension = Extension<{\n  Commands: {\n    toggleItalic: []\n  }\n}>\n\n/**\n * @internal\n */\nexport function defineItalicCommands(): ItalicCommandsExtension {\n  return defineCommands({\n    toggleItalic: () => toggleMark({ type: 'italic' }),\n  })\n}\n","import {\n  canUseRegexLookbehind,\n  type PlainExtension,\n} from '@prosekit/core'\n\nimport { defineMarkInputRule } from '../input-rule'\n\n/**\n * @internal\n */\nexport function defineItalicInputRule(): PlainExtension {\n  return defineMarkInputRule({\n    regex: canUseRegexLookbehind()\n      ? /(?<=\\s|^)\\*([^\\s*]|[^\\s*][^*]*[^\\s*])\\*$/\n      : /\\*([^\\s*]|[^\\s*][^*]*[^\\s*])\\*$/,\n    type: 'italic',\n  })\n}\n","import {\n  defineKeymap,\n  toggleMark,\n  type PlainExtension,\n} from '@prosekit/core'\n\n/**\n * @internal\n */\nexport function defineItalicKeymap(): PlainExtension {\n  return defineKeymap({\n    'Mod-i': toggleMark({ type: 'italic' }),\n  })\n}\n","import {\n  defineMarkSpec,\n  type Extension,\n} from '@prosekit/core'\nimport type { Attrs } from '@prosekit/pm/model'\n\n/**\n * @internal\n */\nexport type ItalicSpecExtension = Extension<{\n  Marks: {\n    italic: Attrs\n  }\n}>\n\n/**\n * @internal\n */\nexport function defineItalicSpec(): ItalicSpecExtension {\n  return defineMarkSpec({\n    name: 'italic',\n    parseDOM: [\n      { tag: 'i' },\n      { tag: 'em' },\n      { style: 'font-style=italic' },\n      {\n        style: 'font-style=normal',\n        clearMark: (m) => m.type.name === 'italic',\n      },\n    ],\n    toDOM() {\n      return ['em', 0]\n    },\n  })\n}\n","import {\n  union,\n  type Union,\n} from '@prosekit/core'\n\nimport {\n  defineItalicCommands,\n  type ItalicCommandsExtension,\n} from './italic-commands'\nimport { defineItalicInputRule } from './italic-input-rule'\nimport { defineItalicKeymap } from './italic-keymap'\nimport {\n  defineItalicSpec,\n  type ItalicSpecExtension,\n} from './italic-spec'\n\n/**\n * @internal\n */\nexport type ItalicExtension = Union<\n  [ItalicSpecExtension, ItalicCommandsExtension]\n>\n\n/**\n * @public\n */\nexport function defineItalic(): ItalicExtension {\n  return union(\n    defineItalicSpec(),\n    defineItalicCommands(),\n    defineItalicKeymap(),\n    defineItalicInputRule(),\n  )\n}\n"],"mappings":";;;;;;;AAkBA,SAAgB,uBAAgD;AAC9D,QAAO,eAAe,EACpB,oBAAoB,WAAW,EAAE,MAAM,UAAU,CAAC,EACnD,CAAC;;;;;;;;ACXJ,SAAgB,wBAAwC;AACtD,QAAO,oBAAoB;EACzB,OAAO,uBAAuB,GAC1B,6CACA;EACJ,MAAM;EACP,CAAC;;;;;;;;ACPJ,SAAgB,qBAAqC;AACnD,QAAO,aAAa,EAClB,SAAS,WAAW,EAAE,MAAM,UAAU,CAAC,EACxC,CAAC;;;;;;;;ACMJ,SAAgB,mBAAwC;AACtD,QAAO,eAAe;EACpB,MAAM;EACN,UAAU;GACR,EAAE,KAAK,KAAK;GACZ,EAAE,KAAK,MAAM;GACb,EAAE,OAAO,qBAAqB;GAC9B;IACE,OAAO;IACP,YAAY,MAAM,EAAE,KAAK,SAAS;IACnC;GACF;EACD,QAAQ;AACN,UAAO,CAAC,MAAM,EAAE;;EAEnB,CAAC;;;;;;;;ACPJ,SAAgB,eAAgC;AAC9C,QAAO,MACL,kBAAkB,EAClB,sBAAsB,EACtB,oBAAoB,EACpB,uBAAuB,CACxB"}