{"version":3,"file":"prosekit-extensions-yjs.js","names":["keymap: Keymap","yUndoPlugin","originalYUndoPlugin"],"sources":["../src/yjs/yjs-commands.ts","../src/yjs/yjs-cursor-plugin.ts","../src/yjs/yjs-keymap.ts","../src/yjs/yjs-sync-plugin.ts","../src/yjs/yjs-undo-plugin.ts","../src/yjs/yjs.ts"],"sourcesContent":["import {\n  defineCommands,\n  type Extension,\n} from '@prosekit/core'\nimport {\n  redoCommand,\n  undoCommand,\n} from 'y-prosemirror'\n\nconst commands = {\n  undo: () => undoCommand,\n  redo: () => redoCommand,\n} as const\n\n/**\n * @internal\n */\nexport type YjsCommandsExtension = Extension<{\n  Commands: {\n    undo: []\n    redo: []\n  }\n}>\n\nexport function defineYjsCommands(): YjsCommandsExtension {\n  return defineCommands(commands)\n}\n","import {\n  definePlugin,\n  type PlainExtension,\n} from '@prosekit/core'\nimport type { Plugin } from '@prosekit/pm/state'\nimport { yCursorPlugin } from 'y-prosemirror'\nimport type { Awareness } from 'y-protocols/awareness'\n\n/**\n * Options for `y-prosemirror`'s `yCursorPlugin`.\n */\nexport type YjsCursorPluginOptions = NonNullable<\n  Parameters<typeof yCursorPlugin>[1]\n>\n\nexport interface YjsCursorOptions extends YjsCursorPluginOptions {\n  awareness: Awareness\n}\n\nexport function defineYjsCursorPlugin(\n  options: YjsCursorOptions,\n): PlainExtension {\n  const { awareness, ...rest } = options\n  return definePlugin(yCursorPlugin(awareness, rest) as Plugin)\n}\n","import {\n  defineKeymap,\n  isApple,\n  type Keymap,\n  type PlainExtension,\n} from '@prosekit/core'\nimport {\n  redoCommand,\n  undoCommand,\n} from 'y-prosemirror'\n\nconst keymap: Keymap = {\n  'Mod-z': undoCommand,\n  'Shift-Mod-z': redoCommand,\n}\n\nif (!isApple) {\n  keymap['Mod-y'] = redoCommand\n}\n\nexport function defineYjsKeymap(): PlainExtension {\n  return defineKeymap(keymap)\n}\n","import {\n  definePlugin,\n  type PlainExtension,\n} from '@prosekit/core'\nimport type { Plugin } from '@prosekit/pm/state'\nimport { ySyncPlugin } from 'y-prosemirror'\nimport type * as Y from 'yjs'\n\n/**\n * Options for `y-prosemirror`'s `ySyncPlugin`.\n */\nexport type YjsSyncPluginOptions = NonNullable<\n  Parameters<typeof ySyncPlugin>[1]\n>\n\nexport interface YjsSyncOptions extends YjsSyncPluginOptions {\n  fragment: Y.XmlFragment\n}\n\nexport function defineYjsSyncPlugin(options: YjsSyncOptions): PlainExtension {\n  const { fragment, ...rest } = options\n  return definePlugin(ySyncPlugin(fragment, rest) as Plugin)\n}\n","import {\n  definePlugin,\n  type PlainExtension,\n} from '@prosekit/core'\nimport type { ProseMirrorPlugin } from '@prosekit/pm/state'\nimport type { EditorView } from '@prosekit/pm/view'\nimport {\n  yUndoPlugin as originalYUndoPlugin,\n  yUndoPluginKey,\n} from 'y-prosemirror'\nimport type { UndoManager as YjsUndoManager } from 'yjs'\n\ntype UndoManager = YjsUndoManager & { restore: () => void }\n\n/**\n * @see https://github.com/yjs/y-prosemirror/issues/114 and https://github.com/yjs/y-prosemirror/issues/102\n */\nfunction fixYUndoPlugin(yUndoPluginInstance: ProseMirrorPlugin) {\n  const originalUndoPluginView = yUndoPluginInstance.spec.view\n  yUndoPluginInstance.spec.view = (view: EditorView) => {\n    const pluginState = yUndoPluginKey.getState(view.state)\n    if (!pluginState) {\n      return {}\n    }\n\n    const undoManager = pluginState.undoManager as UndoManager\n\n    if (undoManager.restore) {\n      undoManager.restore()\n      undoManager.restore = () => {}\n    }\n\n    const viewRet = originalUndoPluginView\n      ? originalUndoPluginView(view)\n      : undefined\n\n    return {\n      destroy: () => {\n        const hasUndoManSelf = undoManager.trackedOrigins.has(undoManager)\n\n        const observers = undoManager._observers\n\n        undoManager.restore = () => {\n          if (hasUndoManSelf) {\n            undoManager.trackedOrigins.add(undoManager)\n          }\n\n          undoManager.doc.on(\n            'afterTransaction',\n            undoManager.afterTransactionHandler,\n          )\n\n          undoManager._observers = observers\n        }\n\n        if (viewRet?.destroy) {\n          viewRet.destroy()\n        }\n      },\n    }\n  }\n}\n\n/**\n * Options for the `y-prosemirror`'s `yUndoPlugin`.\n */\nexport type YjsUndoPluginOptions = NonNullable<\n  Parameters<typeof originalYUndoPlugin>[0]\n>\n\nexport interface YjsUndoOptions extends YjsUndoPluginOptions {}\n\n/**\n * @internal\n */\nfunction yUndoPlugin(options?: YjsUndoOptions) {\n  const yUndoPluginInstance = originalYUndoPlugin(options)\n  fixYUndoPlugin(yUndoPluginInstance)\n  return yUndoPluginInstance\n}\n\n/**\n * @internal\n */\nexport function defineYjsUndoPlugin(options: YjsUndoOptions): PlainExtension {\n  return definePlugin(yUndoPlugin(options))\n}\n","import {\n  Priority,\n  union,\n  withPriority,\n  type PlainExtension,\n  type Union,\n} from '@prosekit/core'\nimport type { Awareness } from 'y-protocols/awareness'\nimport type * as Y from 'yjs'\n\nimport {\n  defineYjsCommands,\n  type YjsCommandsExtension,\n} from './yjs-commands'\nimport {\n  defineYjsCursorPlugin,\n  type YjsCursorPluginOptions,\n} from './yjs-cursor-plugin'\nimport { defineYjsKeymap } from './yjs-keymap'\nimport {\n  defineYjsSyncPlugin,\n  type YjsSyncPluginOptions,\n} from './yjs-sync-plugin'\nimport {\n  defineYjsUndoPlugin,\n  type YjsUndoPluginOptions,\n} from './yjs-undo-plugin'\n\nexport interface YjsOptions {\n  /**\n   * The Yjs instance handles the state of shared data.\n   */\n  doc: Y.Doc\n\n  /**\n   * The Awareness instance.\n   */\n  awareness: Awareness\n\n  /**\n   * The Yjs XmlFragment to use. If not provided,\n   * `doc.getXmlFragment('prosemirror')` will be used.\n   */\n  fragment?: Y.XmlFragment\n\n  /**\n   * Options for `y-prosemirror`'s `ySyncPlugin`.\n   */\n  sync?: YjsSyncPluginOptions\n\n  /**\n   * Options for the `y-prosemirror`'s `yUndoPlugin`.\n   */\n  undo?: YjsUndoPluginOptions\n\n  /**\n   * Options for `y-prosemirror`'s `yCursorPlugin`.\n   */\n  cursor?: YjsCursorPluginOptions\n}\n\n/**\n * @internal\n */\nexport type YjsExtension = Union<[YjsCommandsExtension, PlainExtension]>\n\n/**\n * @public\n */\nexport function defineYjs(options: YjsOptions): YjsExtension {\n  const { doc, awareness, sync, undo, cursor } = options\n  const fragment = options.fragment ?? doc.getXmlFragment('prosemirror')\n\n  return withPriority(\n    union([\n      defineYjsKeymap(),\n      defineYjsCommands(),\n      defineYjsCursorPlugin({ ...cursor, awareness }),\n      defineYjsUndoPlugin({ ...undo }),\n      defineYjsSyncPlugin({ ...sync, fragment }),\n    ]),\n    Priority.high,\n  )\n}\n"],"mappings":";;;;AASA,MAAM,WAAW;CACf,YAAY;CACZ,YAAY;CACb;AAYD,SAAgB,oBAA0C;AACxD,QAAO,eAAe,SAAS;;;;;ACNjC,SAAgB,sBACd,SACgB;CAChB,MAAM,EAAE,UAAW,GAAG,SAAS;AAC/B,QAAO,aAAa,cAAc,WAAW,KAAK,CAAW;;;;;ACZ/D,MAAMA,SAAiB;CACrB,SAAS;CACT,eAAe;CAChB;AAED,IAAI,CAAC,QACH,QAAO,WAAW;AAGpB,SAAgB,kBAAkC;AAChD,QAAO,aAAa,OAAO;;;;;ACF7B,SAAgB,oBAAoB,SAAyC;CAC3E,MAAM,EAAE,SAAU,GAAG,SAAS;AAC9B,QAAO,aAAa,YAAY,UAAU,KAAK,CAAW;;;;;;;;ACJ5D,SAAS,eAAe,qBAAwC;CAC9D,MAAM,yBAAyB,oBAAoB,KAAK;AACxD,qBAAoB,KAAK,QAAQ,SAAqB;EACpD,MAAM,cAAc,eAAe,SAAS,KAAK,MAAM;AACvD,MAAI,CAAC,YACH,QAAO,EAAE;EAGX,MAAM,cAAc,YAAY;AAEhC,MAAI,YAAY,SAAS;AACvB,eAAY,SAAS;AACrB,eAAY,gBAAgB;;EAG9B,MAAM,UAAU,yBACZ,uBAAuB,KAAK,GAC5B;AAEJ,SAAO,EACL,eAAe;GACb,MAAM,iBAAiB,YAAY,eAAe,IAAI,YAAY;GAElE,MAAM,YAAY,YAAY;AAE9B,eAAY,gBAAgB;AAC1B,QAAI,eACF,aAAY,eAAe,IAAI,YAAY;AAG7C,gBAAY,IAAI,GACd,oBACA,YAAY,wBACb;AAED,gBAAY,aAAa;;AAG3B,OAAI,SAAS,QACX,SAAQ,SAAS;KAGtB;;;;;;AAgBL,SAASC,cAAY,SAA0B;CAC7C,MAAM,sBAAsBC,YAAoB,QAAQ;AACxD,gBAAe,oBAAoB;AACnC,QAAO;;;;;AAMT,SAAgB,oBAAoB,SAAyC;AAC3E,QAAO,aAAaD,cAAY,QAAQ,CAAC;;;;;;;;AChB3C,SAAgB,UAAU,SAAmC;CAC3D,MAAM,EAAE,KAAK,WAAW,MAAM,MAAM,WAAW;CAC/C,MAAM,WAAW,QAAQ,YAAY,IAAI,eAAe,cAAc;AAEtE,QAAO,aACL,MAAM;EACJ,iBAAiB;EACjB,mBAAmB;EACnB,sBAAsB;GAAE,GAAG;GAAQ;GAAW,CAAC;EAC/C,oBAAoB,EAAE,GAAG,MAAM,CAAC;EAChC,oBAAoB;GAAE,GAAG;GAAM;GAAU,CAAC;EAC3C,CAAC,EACF,SAAS,KACV"}