.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror pre {
  white-space: pre-wrap;
}

.ProseMirror li {
  position: relative;
}

.ProseMirror-hideselection *::selection { background: transparent; }
.ProseMirror-hideselection *::-moz-selection { background: transparent; }
.ProseMirror-hideselection { caret-color: transparent; }

/* See https://github.com/ProseMirror/prosemirror/issues/1421#issuecomment-1759320191 */
.ProseMirror [draggable][contenteditable=false] { user-select: text }

.ProseMirror-selectednode {
  outline: 2px solid #8cf;
}

/* Make sure li selections wrap around markers */

li.ProseMirror-selectednode {
  outline: none;
}

li.ProseMirror-selectednode:after {
  content: "";
  position: absolute;
  left: -32px;
  right: -2px; top: -2px; bottom: -2px;
  border: 2px solid #8cf;
  pointer-events: none;
}

/* Protect against generic img rules */

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
}


/* src/style.css */
.prosemirror-flat-list {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
  margin-left: 32px;
  margin-bottom: 0;
  position: relative;
  display: list-item;
  list-style: none;
}
.prosemirror-flat-list.ProseMirror-selectednode {
  outline: none;
}
.prosemirror-flat-list.ProseMirror-selectednode:after {
  content: "";
  position: absolute;
  left: -32px;
  right: -2px;
  top: -2px;
  bottom: -2px;
  border: 2px solid #8cf;
  pointer-events: none;
}
.prosemirror-flat-list[data-list-kind=bullet] {
  list-style: disc;
}
.prosemirror-flat-list[data-list-kind=ordered] > * {
  contain: style;
}
.prosemirror-flat-list[data-list-kind=ordered]::before {
  position: absolute;
  right: 100%;
  font-variant-numeric: tabular-nums;
  content: counter(prosemirror-flat-list-counter, decimal) ". ";
}
.prosemirror-flat-list[data-list-kind=ordered] {
  counter-increment: prosemirror-flat-list-counter;
}
.prosemirror-flat-list[data-list-kind=ordered]:first-child,
:not(.prosemirror-flat-list[data-list-kind=ordered]) + .prosemirror-flat-list[data-list-kind=ordered] {
  counter-reset: prosemirror-flat-list-counter;
}
@supports (counter-set: prosemirror-flat-list-counter 1) {
  [data-list-order]:is(.prosemirror-flat-list[data-list-kind=ordered]:first-child, :not(.prosemirror-flat-list[data-list-kind=ordered]) + .prosemirror-flat-list[data-list-kind=ordered]) {
    counter-set: prosemirror-flat-list-counter var(--prosemirror-flat-list-order);
  }
}
@supports not (counter-set: prosemirror-flat-list-counter 1) {
  [data-list-order]:is(.prosemirror-flat-list[data-list-kind=ordered]:first-child, :not(.prosemirror-flat-list[data-list-kind=ordered]) + .prosemirror-flat-list[data-list-kind=ordered]) {
    counter-increment: prosemirror-flat-list-counter var(--prosemirror-flat-list-order);
  }
}
.prosemirror-flat-list[data-list-kind=task] > .list-marker {
  position: absolute;
  right: 100%;
  text-align: center;
  width: 1.5em;
  width: 1lh;
}
:is(.prosemirror-flat-list[data-list-kind=task] > .list-marker),
:is(.prosemirror-flat-list[data-list-kind=task] > .list-marker) * {
  cursor: pointer;
}
.prosemirror-flat-list[data-list-kind=toggle] > .list-marker {
  position: absolute;
  right: 100%;
  text-align: center;
  width: 1.5em;
  width: 1lh;
}
.prosemirror-flat-list[data-list-kind=toggle] > .list-marker::before {
  content: "\23f7";
}
.prosemirror-flat-list[data-list-kind=toggle][data-list-collapsable][data-list-collapsed] > .list-marker::before {
  content: "\23f5";
}
.prosemirror-flat-list[data-list-kind=toggle][data-list-collapsable] > .list-marker {
  cursor: pointer;
}
.prosemirror-flat-list[data-list-kind=toggle]:not([data-list-collapsable]) > .list-marker {
  opacity: 40%;
  pointer-events: none;
}
.prosemirror-flat-list[data-list-kind=toggle][data-list-collapsable][data-list-collapsed] > .list-content > *:nth-child(n+2) {
  display: none;
}


.ProseMirror .tableWrapper {
  overflow-x: auto;
}

.ProseMirror table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  overflow: hidden;
}

.ProseMirror td, .ProseMirror th {
  box-sizing: border-box;
  vertical-align: top;
  border-width: 1px;
  padding-left: .75rem;
  padding-right: .75rem;
  position: relative;
}

.ProseMirror .column-resize-handle {
  z-index: 20;
  pointer-events: none;
  background-color: highlighttext;
  width: 4px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: -2px;
}

.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.ProseMirror .selectedCell {
  --color: 210, 100%, 56%;
  border: 1px double hsl(var(--color));
  background-color: hsla(var(--color), 20%);
}

.prosekit-placeholder:before {
  content: attr(data-placeholder);
  opacity: .3;
  pointer-events: none;
  height: 0;
  position: absolute;
}

.prosekit-virtual-selection {
  background-color: #8888884d;
  border-radius: 2px;
  box-shadow: 0 0 0 2px #8888884d;
}

.prosekit-commit-deletion {
  background-color: #e5534b80;
  text-decoration: line-through;
}

.prosekit-commit-addition {
  background-color: #53e54b80;
}

.ProseMirror-gapcursor {
  pointer-events: none;
  display: none;
  position: relative;
}

.ProseMirror-gapcursor:after {
  content: "";
  border-top: 1px solid;
  width: 20px;
  animation: 1.1s steps(2, start) infinite ProseMirror-cursor-blink;
  display: block;
  position: absolute;
  top: -2px;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}


