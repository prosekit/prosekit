{"version":3,"file":"prosekit-extensions-mention.js","names":[],"sources":["../src/mention/index.ts"],"sourcesContent":["import {\n  defineCommands,\n  defineNodeSpec,\n  insertNode,\n  union,\n  type Extension,\n  type Union,\n} from '@prosekit/core'\n\nexport interface MentionAttrs {\n  id: string\n  value: string\n  kind: string\n}\n\n/**\n * @internal\n */\nexport type MentionSpecExtension = Extension<{\n  Nodes: {\n    mention: MentionAttrs\n  }\n}>\n\n/**\n * @public\n */\nexport function defineMentionSpec(): MentionSpecExtension {\n  return defineNodeSpec<'mention', MentionAttrs>({\n    name: 'mention',\n    atom: true,\n    group: 'inline',\n    attrs: {\n      id: { validate: 'string' },\n      value: { validate: 'string' },\n      kind: { default: '', validate: 'string' },\n    },\n    inline: true,\n    leafText: (node) => (node.attrs as MentionAttrs).value.toString(),\n    parseDOM: [\n      {\n        tag: `span[data-mention]`,\n        getAttrs: (dom: HTMLElement): MentionAttrs => ({\n          id: dom.getAttribute('data-id') || '',\n          kind: dom.getAttribute('data-mention') || '',\n          value: dom.textContent || '',\n        }),\n      },\n    ],\n    toDOM(node) {\n      return [\n        'span',\n        {\n          'data-id': (node.attrs as MentionAttrs).id.toString(),\n          'data-mention': (node.attrs as MentionAttrs).kind.toString(),\n        },\n        (node.attrs as MentionAttrs).value.toString(),\n      ]\n    },\n  })\n}\n\n/**\n * @internal\n */\nexport type MentionCommandsExtension = Extension<{\n  Commands: {\n    insertMention: [attrs: MentionAttrs]\n  }\n}>\n\nexport function defineMentionCommands(): MentionCommandsExtension {\n  return defineCommands({\n    insertMention: (attrs: MentionAttrs) => {\n      return insertNode({ type: 'mention', attrs })\n    },\n  })\n}\n\n/**\n * @internal\n */\nexport type MentionExtension = Union<[MentionSpecExtension, MentionCommandsExtension]>\n\n/**\n * @public\n */\nexport function defineMention(): MentionExtension {\n  return union(defineMentionSpec(), defineMentionCommands())\n}\n"],"mappings":";;;;;;AA2BA,SAAgB,oBAA0C;AACxD,QAAO,eAAwC;EAC7C,MAAM;EACN,MAAM;EACN,OAAO;EACP,OAAO;GACL,IAAI,EAAE,UAAU,UAAU;GAC1B,OAAO,EAAE,UAAU,UAAU;GAC7B,MAAM;IAAE,SAAS;IAAI,UAAU;IAAU;GAC1C;EACD,QAAQ;EACR,WAAW,SAAU,KAAK,MAAuB,MAAM,UAAU;EACjE,UAAU,CACR;GACE,KAAK;GACL,WAAW,SAAoC;IAC7C,IAAI,IAAI,aAAa,UAAU,IAAI;IACnC,MAAM,IAAI,aAAa,eAAe,IAAI;IAC1C,OAAO,IAAI,eAAe;IAC3B;GACF,CACF;EACD,MAAM,MAAM;AACV,UAAO;IACL;IACA;KACE,WAAY,KAAK,MAAuB,GAAG,UAAU;KACrD,gBAAiB,KAAK,MAAuB,KAAK,UAAU;KAC7D;IACA,KAAK,MAAuB,MAAM,UAAU;IAC9C;;EAEJ,CAAC;;AAYJ,SAAgB,wBAAkD;AAChE,QAAO,eAAe,EACpB,gBAAgB,UAAwB;AACtC,SAAO,WAAW;GAAE,MAAM;GAAW;GAAO,CAAC;IAEhD,CAAC;;;;;AAWJ,SAAgB,gBAAkC;AAChD,QAAO,MAAM,mBAAmB,EAAE,uBAAuB,CAAC"}