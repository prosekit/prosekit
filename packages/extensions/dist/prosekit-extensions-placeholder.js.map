{"version":3,"file":"prosekit-extensions-placeholder.js","names":["placeholderText: string"],"sources":["../src/placeholder/index.ts"],"sourcesContent":["import {\n  definePlugin,\n  isInCodeBlock,\n  maybeRun,\n  type PlainExtension,\n} from '@prosekit/core'\nimport type { ProseMirrorNode } from '@prosekit/pm/model'\nimport {\n  Plugin,\n  PluginKey,\n  type EditorState,\n} from '@prosekit/pm/state'\nimport {\n  Decoration,\n  DecorationSet,\n} from '@prosekit/pm/view'\n\nimport { findTable } from '../table'\n\nexport interface PlaceholderOptions {\n  /**\n   * The placeholder to use. It can be a static string or a function that\n   * receives the current editor state and returns a string.\n   */\n  placeholder: string | ((state: EditorState) => string)\n\n  /**\n   * By default, the placeholder text will be shown whenever the current text\n   * cursor is in an empty text node and it's not inside a code block or a\n   * table node.\n   *\n   * If you only want to show the placeholder when the whole doc is empty, you\n   * can set this option to 'doc'.\n   *\n   * You can also pass a function that receives the current editor state and\n   * returns a boolean value to determine whether the placeholder should be\n   * shown.\n   *\n   * @default 'block'\n   */\n  strategy?: 'doc' | 'block' | ((state: EditorState) => boolean)\n}\n\n/**\n * Add a placeholder text to the editor when the current block or document is\n * empty.\n */\nexport function definePlaceholder(options: PlaceholderOptions): PlainExtension {\n  return definePlugin(createPlaceholderPlugin(options))\n}\n\nfunction createPlaceholderPlugin({\n  placeholder,\n  strategy = 'block',\n}: PlaceholderOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('prosekit-placeholder'),\n    props: {\n      decorations: (state) => {\n        const strategyFn = typeof strategy === 'function'\n          ? strategy\n          : strategy === 'doc'\n          ? docStrategy\n          : defaultStrategy\n\n        if (!strategyFn(state)) {\n          return null\n        }\n\n        const placeholderText: string = maybeRun(placeholder, state)\n        const deco = createPlaceholderDecoration(state, placeholderText)\n        if (!deco) {\n          return null\n        }\n\n        return DecorationSet.create(state.doc, [deco])\n      },\n    },\n  })\n}\n\nfunction defaultStrategy(state: EditorState): boolean {\n  return !isInCodeBlock(state.selection) && !findTable(state.selection.$from)\n}\n\nfunction docStrategy(state: EditorState): boolean {\n  return isDocEmpty(state.doc) && defaultStrategy(state)\n}\n\nfunction isDocEmpty(doc: ProseMirrorNode) {\n  return doc.childCount <= 1 && !doc.firstChild?.content.size\n}\n\nfunction createPlaceholderDecoration(\n  state: EditorState,\n  placeholderText: string,\n): Decoration | null {\n  if (!placeholderText) return null\n\n  const { selection } = state\n  if (!selection.empty) return null\n\n  const $pos = selection.$anchor\n  const node = $pos.parent\n  if (node.content.size > 0) return null\n\n  const before = $pos.before()\n\n  return Decoration.node(before, before + node.nodeSize, {\n    'class': 'prosekit-placeholder',\n    'data-placeholder': placeholderText,\n  })\n}\n"],"mappings":";;;;;;;;;;;AA+CA,SAAgB,kBAAkB,SAA6C;AAC7E,QAAO,aAAa,wBAAwB,QAAQ,CAAC;;AAGvD,SAAS,wBAAwB,EAC/B,aACA,WAAW,WACkB;AAC7B,QAAO,IAAI,OAAO;EAChB,KAAK,IAAI,UAAU,uBAAuB;EAC1C,OAAO,EACL,cAAc,UAAU;AAOtB,OAAI,EANe,OAAO,aAAa,aACnC,WACA,aAAa,QACb,cACA,iBAEY,MAAM,CACpB,QAAO;GAGT,MAAMA,kBAA0B,SAAS,aAAa,MAAM;GAC5D,MAAM,OAAO,4BAA4B,OAAO,gBAAgB;AAChE,OAAI,CAAC,KACH,QAAO;AAGT,UAAO,cAAc,OAAO,MAAM,KAAK,CAAC,KAAK,CAAC;KAEjD;EACF,CAAC;;AAGJ,SAAS,gBAAgB,OAA6B;AACpD,QAAO,CAAC,cAAc,MAAM,UAAU,IAAI,CAAC,UAAU,MAAM,UAAU,MAAM;;AAG7E,SAAS,YAAY,OAA6B;AAChD,QAAO,WAAW,MAAM,IAAI,IAAI,gBAAgB,MAAM;;AAGxD,SAAS,WAAW,KAAsB;AACxC,QAAO,IAAI,cAAc,KAAK,CAAC,IAAI,YAAY,QAAQ;;AAGzD,SAAS,4BACP,OACA,iBACmB;AACnB,KAAI,CAAC,gBAAiB,QAAO;CAE7B,MAAM,EAAE,cAAc;AACtB,KAAI,CAAC,UAAU,MAAO,QAAO;CAE7B,MAAM,OAAO,UAAU;CACvB,MAAM,OAAO,KAAK;AAClB,KAAI,KAAK,QAAQ,OAAO,EAAG,QAAO;CAElC,MAAM,SAAS,KAAK,QAAQ;AAE5B,QAAO,WAAW,KAAK,QAAQ,SAAS,KAAK,UAAU;EACrD,SAAS;EACT,oBAAoB;EACrB,CAAC"}