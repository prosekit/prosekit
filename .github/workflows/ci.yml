name: CI

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - name: Lint
        run: pnpm run lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - name: Typecheck
        run: pnpm run typecheck

  test-unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - name: Install Playwright
        run: pnpm run test:install

      - name: Run unit tests
        run: pnpm run test:coverage

  test-e2e:
    runs-on: ubuntu-latest

    needs: [build]

    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5]

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/cache

      - name: Install Playwright
        run: pnpm run test:install

      - name: Build
        run: pnpm run build

      - name: Run e2e tests
        run: pnpm run test:e2e --shard="${{ matrix.shard }}/5"

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/cache
        id: cache

      # Make the following step faster by building all packages
      # declarations together.
      - name: Prepare type declarations
        if: ${{ steps.cache.outputs.cache-hit == '' }}
        run: cd packages/prosekit && pnpm run build:tsc

      - name: Build packages
        run: pnpm run build:package

      - name: Build website
        run: pnpm run build

  publish-snapshot:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/cache

      - name: Build packages
        run: pnpm run build:package

      - name: Publish snapshot packages
        if: ${{ github.event_name == 'pull_request' }}
        run: >
          ./node_modules/.bin/pkg-pr-new publish --pnpm
          ./packages/basic
          ./packages/core
          ./packages/extensions
          ./packages/lit
          ./packages/pm
          ./packages/preact
          ./packages/prosekit
          ./packages/react
          ./packages/solid
          ./packages/svelte
          ./packages/vue
          ./packages/web

  linkcheck:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/cache

      - name: Build
        run: pnpm run build

      - name: Check links
        uses: lycheeverse/lychee-action@v2.6.1
        with:
          workingDirectory: website/dist
          args: >
            --include-fragments
            --index-files 'index.html'
            --root-dir "$PWD"
            --no-progress
            --format detailed
            --accept 100..=103,200..=299,403
            './**/*.html'
          debug: false
          fail: true
          failIfEmpty: true

  deploy:
    runs-on: ubuntu-latest

    needs: [build]

    env:
      CLOUDFLARE_PAGES_API_TOKEN: ${{ secrets.CLOUDFLARE_PAGES_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/cache

      - name: Build
        run: pnpm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        # Only run this step if the CLOUDFLARE_PAGES_API_TOKEN is set (i.e. it's
        # not from a fork). Notice that secrets cannot be directly referenced in
        # `if:` conditionals.
        if: ${{ env.CLOUDFLARE_PAGES_API_TOKEN != '' }}
        with:
          apiToken: ${{ env.CLOUDFLARE_PAGES_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: pages deploy website/dist --project-name=prosekit-dev
        timeout-minutes: 5
