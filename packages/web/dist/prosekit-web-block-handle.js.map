{"version":3,"file":"prosekit-web-block-handle.js","names":["blockPopoverContext: Context<BlockPopoverContext>","draggingContext: Context<boolean>","blockHandleAddProps: PropDeclarations<BlockHandleAddProps>","blockHandleAddEvents: EventDeclarations<BlockHandleAddEvents>","BlockHandleAddElementBase: BaseElementConstructor<BlockHandleAddProps>","blockHandleDraggableProps: PropDeclarations<BlockHandleDraggableProps>","blockHandleDraggableEvents: EventDeclarations<BlockHandleDraggableEvents>","BlockHandleDraggableElementBase: BaseElementConstructor<BlockHandleDraggableProps>","parent: ProseMirrorNode | undefined","children: ProseMirrorNode[]","positions: number[]","prevHoverState: HoverState | null","blockHandlePopoverProps: PropDeclarations<BlockHandlePopoverProps>","blockHandlePopoverEvents: EventDeclarations<BlockHandlePopoverEvents>","BlockHandlePopoverElementBase: BaseElementConstructor<BlockHandlePopoverProps>"],"sources":["../src/components/block-handle/context.ts","../src/components/block-handle/block-handle-add/setup.ts","../src/components/block-handle/block-handle-add/types.ts","../src/components/block-handle/block-handle-add/element.gen.ts","../src/utils/get-box-element.ts","../src/utils/get-client-rect.ts","../src/utils/max-z-index.ts","../src/components/block-handle/block-handle-draggable/set-drag-preview.ts","../src/components/block-handle/block-handle-draggable/setup.ts","../src/components/block-handle/block-handle-draggable/types.ts","../src/components/block-handle/block-handle-draggable/element.gen.ts","../src/utils/throttle.ts","../src/components/block-handle/block-handle-popover/pointer-move.ts","../src/components/block-handle/block-handle-popover/setup.ts","../src/components/block-handle/block-handle-popover/types.ts","../src/components/block-handle/block-handle-popover/element.gen.ts"],"sourcesContent":["import {\n  createContext,\n  type Context,\n} from '@aria-ui/core'\nimport type { ProseMirrorNode } from '@prosekit/pm/model'\n\n/**\n * @internal\n */\nexport interface HoverState {\n  node: ProseMirrorNode\n  pos: number\n}\n\n/**\n * @internal\n */\nexport type BlockPopoverContext = HoverState | null\n\n/**\n * @internal\n */\nexport const blockPopoverContext: Context<BlockPopoverContext> = createContext(\n  'prosekit-block-popover-context',\n  null,\n)\n\n/**\n * @internal\n */\nexport const draggingContext: Context<boolean> = createContext(\n  'prosekit-block-handle-dragging-context',\n  false,\n)\n","import {\n  useEventListener,\n  type ConnectableElement,\n  type SignalState,\n} from '@aria-ui/core'\nimport { insertDefaultBlock } from '@prosekit/core'\n\nimport { blockPopoverContext } from '../context'\n\nimport type { BlockHandleAddProps } from './types'\n\n/**\n * @internal\n */\nexport function useBlockHandleAdd(\n  host: ConnectableElement,\n  { state }: { state: SignalState<BlockHandleAddProps> },\n): void {\n  const context = blockPopoverContext.consume(host)\n\n  useEventListener(host, 'pointerdown', (event) => {\n    event.preventDefault()\n\n    const editor = state.editor.get()\n    const hoverState = context.get()\n    if (!editor || !hoverState) {\n      return\n    }\n\n    const { node, pos } = hoverState\n    editor.exec(insertDefaultBlock({ pos: pos + node.nodeSize }))\n    editor.focus()\n\n    // Hide the drag handle\n    context.set(null)\n  })\n}\n","import type {\n  EventDeclarations,\n  PropDeclarations,\n} from '@aria-ui/core'\nimport type { Editor } from '@prosekit/core'\n\nexport interface BlockHandleAddProps {\n  /**\n   * The ProseKit editor instance.\n   *\n   * @default null\n   * @hidden\n   */\n  editor: Editor | null\n}\n\n/** @internal */\nexport const blockHandleAddProps: PropDeclarations<BlockHandleAddProps> = {\n  editor: { default: null },\n}\n\n/** @internal */\nexport interface BlockHandleAddEvents {}\n\n/** @internal */\nexport const blockHandleAddEvents: EventDeclarations<BlockHandleAddEvents> = {}\n","import { defineCustomElement, registerCustomElement, type BaseElementConstructor } from \"@aria-ui/core\"\n\nimport { useBlockHandleAdd } from \"./setup\"\nimport { blockHandleAddEvents, blockHandleAddProps, type BlockHandleAddEvents, type BlockHandleAddProps } from \"./types\"\n\nconst BlockHandleAddElementBase: BaseElementConstructor<BlockHandleAddProps> = defineCustomElement<\n  BlockHandleAddProps,\n  BlockHandleAddEvents\n>({\n  props: blockHandleAddProps,\n  events: blockHandleAddEvents,\n  setup: useBlockHandleAdd,\n})\nclass BlockHandleAddElement extends BlockHandleAddElementBase {}\n\nregisterCustomElement('prosekit-block-handle-add', BlockHandleAddElement)\n  \nexport { BlockHandleAddElement }\n","/**\n * Returns the element that has a box.\n */\nexport function getBoxElement(element: Element): Element | null | undefined {\n  const window = element.ownerDocument.defaultView\n  if (!window) {\n    return\n  }\n\n  const style = window.getComputedStyle(element)\n  const display = style.display\n\n  if (display === 'contents' && element.childElementCount === 1) {\n    return element.firstElementChild\n  } else if (display === 'none') {\n    return\n  }\n\n  return element\n}\n","/**\n * Similar to `element.getBoundingClientRect`, but handles `display: contents` elements.\n */\nexport function getClientRect(element: Element): {\n  top: number\n  right: number\n  bottom: number\n  left: number\n} {\n  const rect = element.getBoundingClientRect()\n  if (rect.width === 0 && rect.height === 0 && rect.x === 0 && rect.y === 0) {\n    // Suspiciously rect, probably an element with `display: contents`, in\n    // which case `element.getClientRects()` will return an empty array.\n    if (element.getClientRects().length === 0) {\n      const children = Array.from(element.children)\n      const rects = children.map(child => getClientRect(child))\n      if (rects.length === 0) {\n        return rect\n      }\n      if (rects.length === 1) {\n        return rects[0]\n      }\n      let { top, bottom, left, right } = rects[0]\n      for (let i = 1; i < rects.length; i++) {\n        const r = rects[i]\n        if (r.top < top) top = r.top\n        if (r.bottom > bottom) bottom = r.bottom\n        if (r.left < left) left = r.left\n        if (r.right > right) right = r.right\n      }\n      return { top, bottom, left, right }\n    }\n  }\n  return rect\n}\n","// Maximum possible z-index\n// https://stackoverflow.com/questions/491052/minimum-and-maximum-value-of-z-index\nexport const maxZIndex = '2147483647'\n","import { assignStyles } from '../../../utils/assign-styles'\nimport { deepCloneElement } from '../../../utils/clone-element'\nimport { getClientRect } from '../../../utils/get-client-rect'\nimport { injectStyle } from '../../../utils/inject-style'\nimport { maxZIndex } from '../../../utils/max-z-index'\n\n/**\n * Sets a drag preview image for the given element and ensures the preview position\n * relative to the pointer is correct.\n *\n * This function does the following:\n *\n * - Creates a temporary container element.\n * - Puts the container at the end of the document body.\n * - Sets event's drag image.\n * - Removes the container from the document body after the next frame.\n */\nexport function setDragPreview(event: DragEvent, element: HTMLElement): void {\n  const { top, bottom, left, right } = getClientRect(element)\n  const width = right - left\n  const height = bottom - top\n  const elementX = left\n  const elementY = top\n\n  const { clientX, clientY } = event\n\n  const document = element.ownerDocument\n\n  const container = document.createElement('div')\n\n  // If outsideX is positive, the point is at the left side of the element.\n  const outsideX = Math.round(elementX - clientX)\n  // If outsideY is positive, the point is above the element.\n  const outsideY = Math.round(elementY - clientY)\n\n  const borderX = Math.max(outsideX, 0)\n  const borderY = Math.max(outsideY, 0)\n  assignStyles(container, {\n    // Ensuring we don't cause reflow when adding the element to the page using\n    // `position:fixed` rather than `position:absolute` so we are positioned on\n    // the current viewport. `position:fixed` also creates a new stacking\n    // context, so we don't need to do that here.\n    // https://github.com/atlassian/pragmatic-drag-and-drop/blob/56276552/packages/core/src/public-utils/element/custom-native-drag-preview/set-custom-native-drag-preview.ts#L60\n    position: 'fixed',\n\n    // The element is positioned off-screen to avoid capturing the content of\n    // the page on Safari when the dragging element has a transparent background\n    // on Safari. See https://github.com/prosekit/prosekit/issues/1153 for more\n    // details.\n    top: '-1000vh',\n    left: '-1000vw',\n\n    // The element should not be interactive.\n    pointerEvents: 'none',\n\n    zIndex: maxZIndex,\n\n    // Only reliable cross browser technique found to push a drag preview away\n    // from the cursor is to use transparent borders on the container.\n    // https://github.com/atlassian/pragmatic-drag-and-drop/blob/56276552/packages/core/src/public-utils/element/custom-native-drag-preview/pointer-outside-of-preview.ts#L13-L18\n    borderLeft: `${borderX}px solid transparent`,\n    borderTop: `${borderY}px solid transparent`,\n\n    boxSizing: 'border-box',\n    width: `${width + borderX}px`,\n    height: `${height + borderY}px`,\n  })\n\n  const [clonedElement, styleText] = deepCloneElement(element, true)\n\n  // A hardcoded opacity.\n  clonedElement.style.setProperty('opacity', '0.5', 'important')\n  // The bounding client rect doesn't include the margin, so we need to remove\n  // the margin too from the cloned element so that it can fit the container.\n  clonedElement.style.setProperty('margin', '0', 'important')\n  // Hide the outline of the cloned element.\n  clonedElement.style.setProperty('outline-color', 'transparent', 'important')\n\n  document.body.appendChild(container)\n  container.appendChild(clonedElement)\n  injectStyle(container, styleText)\n\n  event.dataTransfer?.setDragImage(container, Math.max(-outsideX, 0), Math.max(-outsideY, 0))\n\n  requestAnimationFrame(() => {\n    container.remove()\n  })\n}\n","import {\n  useAttribute,\n  useEffect,\n  useEventListener,\n  type ConnectableElement,\n  type ReadonlySignal,\n  type SignalState,\n} from '@aria-ui/core'\nimport { isHTMLElement } from '@ocavue/utils'\nimport type { Editor } from '@prosekit/core'\nimport type { ViewDragging } from '@prosekit/extensions/drop-indicator'\nimport {\n  Fragment,\n  Slice,\n} from '@prosekit/pm/model'\nimport { NodeSelection } from '@prosekit/pm/state'\nimport type { EditorView } from '@prosekit/pm/view'\n\nimport { getBoxElement } from '../../../utils/get-box-element'\nimport { getSafeEditorView } from '../../../utils/get-safe-editor-view'\nimport {\n  blockPopoverContext,\n  draggingContext,\n  type BlockPopoverContext,\n  type HoverState,\n} from '../context'\n\nimport { setDragPreview } from './set-drag-preview'\nimport type { BlockHandleDraggableProps } from './types'\n\n/**\n * @internal\n */\nexport function useBlockHandleDraggable(\n  host: ConnectableElement,\n  { state }: { state: SignalState<BlockHandleDraggableProps> },\n): void {\n  const context = blockPopoverContext.consume(host)\n  const dragging = draggingContext.consume(host)\n\n  useEffect(host, () => {\n    host.draggable = true\n  })\n\n  usePointerDownHandler(host, context, state.editor)\n\n  useEventListener(host, 'dragstart', (event) => {\n    dragging.set(true)\n\n    const view = getSafeEditorView(state.editor.get())\n    const hoverState = context.get()\n\n    if (view && hoverState) {\n      view.dom.classList.add('prosekit-dragging')\n      createDraggingPreview(view, hoverState, event)\n      setViewDragging(view, hoverState)\n    }\n  })\n\n  useEventListener(host, 'dragend', () => {\n    dragging.set(false)\n\n    const view = getSafeEditorView(state.editor.get())\n    if (view) {\n      view.dom.classList.remove('prosekit-dragging')\n    }\n  })\n\n  useAttribute(host, 'data-dragging', () => (dragging.get() ? '' : undefined))\n}\n\nfunction usePointerDownHandler(\n  host: ConnectableElement,\n  context: ReadonlySignal<BlockPopoverContext>,\n  editor: ReadonlySignal<Editor | null>,\n) {\n  useEventListener(host, 'pointerdown', () => {\n    const { pos } = context.get() ?? {}\n    const { view } = editor.get() ?? {}\n\n    if (pos == null || view == null) {\n      return\n    }\n\n    view.dispatch(\n      view.state.tr.setSelection(NodeSelection.create(view.state.doc, pos)),\n    )\n\n    // Clicking the handle will blur the editor, so we need to focus it again.\n    // We cannot call `event.preventDefault()` here to prevent the blur\n    // because it will prevent the drag event from firing.\n    requestAnimationFrame(() => {\n      view.focus()\n    })\n  })\n}\n\nfunction createDraggingPreview(view: EditorView, hoverState: HoverState, event: DragEvent): void {\n  if (!event.dataTransfer) {\n    return\n  }\n\n  const { pos } = hoverState\n\n  const element = view.nodeDOM(pos)\n  if (!element || !isHTMLElement(element)) {\n    return\n  }\n\n  const boxElement = getBoxElement(element)\n  if (!boxElement || !isHTMLElement(boxElement)) {\n    return\n  }\n\n  event.dataTransfer.clearData()\n  event.dataTransfer.setData('text/html', boxElement.outerHTML)\n  event.dataTransfer.effectAllowed = 'copyMove'\n  setDragPreview(event, boxElement)\n\n  return\n}\n\nfunction setViewDragging(view: EditorView, hoverState: HoverState): void {\n  const { node, pos } = hoverState\n\n  const dragging: ViewDragging = {\n    slice: new Slice(Fragment.from(node), 0, 0),\n    move: true,\n    node: NodeSelection.create(view.state.doc, pos),\n  }\n\n  view.dragging = dragging\n}\n","import type {\n  EventDeclarations,\n  PropDeclarations,\n} from '@aria-ui/core'\nimport type { Editor } from '@prosekit/core'\n\nexport interface BlockHandleDraggableProps {\n  /**\n   * The ProseKit editor instance.\n   *\n   * @default null\n   * @hidden\n   */\n  editor: Editor | null\n}\n\n/** @internal */\nexport const blockHandleDraggableProps: PropDeclarations<BlockHandleDraggableProps> = {\n  editor: { default: null },\n}\n\n/** @internal */\nexport interface BlockHandleDraggableEvents {}\n\n/** @internal */\nexport const blockHandleDraggableEvents: EventDeclarations<BlockHandleDraggableEvents> = {}\n","import { defineCustomElement, registerCustomElement, type BaseElementConstructor } from \"@aria-ui/core\"\n\nimport { useBlockHandleDraggable } from \"./setup\"\nimport { blockHandleDraggableEvents, blockHandleDraggableProps, type BlockHandleDraggableEvents, type BlockHandleDraggableProps } from \"./types\"\n\nconst BlockHandleDraggableElementBase: BaseElementConstructor<BlockHandleDraggableProps> = defineCustomElement<\n  BlockHandleDraggableProps,\n  BlockHandleDraggableEvents\n>({\n  props: blockHandleDraggableProps,\n  events: blockHandleDraggableEvents,\n  setup: useBlockHandleDraggable,\n})\nclass BlockHandleDraggableElement extends BlockHandleDraggableElementBase {}\n\nregisterCustomElement('prosekit-block-handle-draggable', BlockHandleDraggableElement)\n  \nexport { BlockHandleDraggableElement }\n","/**\n * @internal\n */\nexport function throttle<Args extends any[]>(\n  callback: (...args: Args) => void,\n  wait: number,\n): (...args: Args) => void {\n  let lastTime = 0\n\n  return (...args: Args) => {\n    const now = Date.now()\n    if (now - lastTime >= wait) {\n      callback(...args)\n      lastTime = now\n    }\n  }\n}\n","import type { VirtualElement } from '@floating-ui/dom'\nimport {\n  isElement,\n  isHTMLElement,\n  isTextNode,\n} from '@ocavue/utils'\nimport {\n  defineDOMEventHandler,\n  union,\n  type PlainExtension,\n} from '@prosekit/core'\nimport type { ProseMirrorNode } from '@prosekit/pm/model'\nimport type { EditorView } from '@prosekit/pm/view'\n\nimport { getClientRect } from '../../../utils/get-client-rect'\nimport { throttle } from '../../../utils/throttle'\nimport type { HoverState } from '../context'\n\nexport type ElementHoverHandler = (\n  reference: VirtualElement | null,\n  hoverState: HoverState | null,\n) => void\n\nexport function defineElementHoverHandler(handler: ElementHoverHandler): PlainExtension {\n  const handleElement = (\n    node: ProseMirrorNode,\n    pos: number,\n    element: HTMLElement,\n    parentElement?: Node | null,\n  ) => {\n    const reference: VirtualElement = {\n      contextElement: element,\n\n      getBoundingClientRect: () => {\n        const rect = findFirstLineRect(parentElement, element)\n        return rect ? fulfillRect(rect) : fallbackRect\n      },\n    }\n\n    handler(reference, { node, pos })\n  }\n\n  const handlePointerEvent = (view: EditorView, event: PointerEvent) => {\n    const { x, y } = event\n    const block = findBlockByCoords(view, x, y)\n    if (!block) {\n      handler(null, null)\n      return\n    }\n\n    const { node, pos } = block\n    const element = view.nodeDOM(pos)\n    if (!element || !isHTMLElement(element)) {\n      handler(null, null)\n      return\n    }\n\n    // If `node` is the first child of another non-doc block node, for example a\n    // list node or a blockquote node, we want to put the block handle agains\n    // the parent node.\n    const $pos = view.state.doc.resolve(pos)\n    if ($pos.depth > 0 && $pos.index($pos.depth) === 0) {\n      const parentPos = $pos.before($pos.depth)\n      const parentNode = $pos.parent\n      const parentElement = view.nodeDOM(parentPos)\n      handleElement(parentNode, parentPos, element, parentElement)\n    } else {\n      handleElement(node, pos, element)\n    }\n  }\n\n  return union(\n    defineDOMEventHandler('pointermove', throttle(handlePointerEvent, 200)),\n    defineDOMEventHandler('pointerout', handlePointerEvent),\n    defineDOMEventHandler('keypress', () => handler(null, null)),\n  )\n}\n\nfunction findBlockByCoords(view: EditorView, x: number, y: number): { node: ProseMirrorNode; pos: number } | undefined {\n  const rect = getClientRect(view.dom)\n  if (!isWithinRect(rect, x, y)) {\n    return\n  }\n\n  let parent: ProseMirrorNode | undefined = view.state.doc\n  let pos = -1\n\n  while (parent) {\n    if (parent.isBlock && (parent.isTextblock || parent.isAtom || parent.type.spec.isolating)) {\n      return { node: parent, pos }\n    }\n\n    // Collect all children and their positions\n    const children: ProseMirrorNode[] = []\n    const positions: number[] = []\n    parent.forEach((child, offset) => {\n      children.push(child)\n      positions.push(offset + pos + 1)\n    })\n\n    let lo = 0\n    let hi = children.length - 1\n\n    while (lo <= hi) {\n      const i = hi - ((hi - lo) >> 1)\n      const childDOM = view.nodeDOM(positions[i])\n      const childRect = getNodeRect(childDOM)\n      if (!childRect) {\n        console.warn(`[prosekit] Unable to get rect at position: ${positions[i]}`)\n        return\n      }\n      if (childRect.top > y) {\n        hi = i - 1\n      } else if (childRect.bottom < y) {\n        lo = i + 1\n      } else {\n        lo = i\n        break\n      }\n    }\n\n    if (lo > hi) {\n      return\n    }\n\n    parent = children[lo]\n    pos = positions[lo]\n  }\n}\n\nfunction getNodeRect(node: Node | null | undefined): Rect | undefined {\n  if (node && isElement(node) && node.isConnected) {\n    return getClientRect(node)\n  }\n}\n\nfunction isWithinRect(rect: Rect, x: number, y: number) {\n  return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\n}\n\ninterface Rect {\n  top: number\n  right: number\n  bottom: number\n  left: number\n}\n\nfunction findFirstLineRect(outer?: Node | null, inner?: Node | null): Rect | undefined {\n  if (outer && !outer.isConnected) {\n    return\n  }\n  if (inner && !inner.isConnected) {\n    return\n  }\n\n  if (outer && inner) {\n    const outerRect = findOuterRect(outer)\n    const innerRect = findFirstLineRectInNode(inner)\n    if (outerRect && innerRect) {\n      const { top, bottom } = innerRect\n      const { left, right } = outerRect\n      return { top, bottom, left, right }\n    } else {\n      return outerRect || innerRect\n    }\n  } else if (outer) {\n    return findFirstLineRectInNode(outer)\n  } else if (inner) {\n    return findFirstLineRectInNode(inner)\n  }\n}\n\nfunction findOuterRect(node: Node): Rect | undefined {\n  if (!isElement(node)) {\n    return\n  }\n\n  const rect = getClientRect(node)\n  const style = node.ownerDocument.defaultView?.getComputedStyle(node)\n  const marginLeft = style && Number.parseInt(style.marginLeft, 10) || 0\n  const marginRight = style && Number.parseInt(style.marginRight, 10) || 0\n  const left = rect.left - marginLeft\n  const right = rect.right + marginRight\n\n  return { top: rect.top, bottom: rect.bottom, left, right }\n}\n\nfunction findFirstLineRectInNode(node: Node): Rect | undefined {\n  if (isElement(node)) {\n    return findFirstLineRectInElement(node)\n  } else if (isTextNode(node)) {\n    return findFirstLineRectInTextNode(node)\n  }\n}\n\nfunction findFirstLineRectInTextNode(node: Text): Rect | undefined {\n  const ownerDocument = node.ownerDocument\n  if (!ownerDocument) {\n    return\n  }\n  const range = ownerDocument.createRange()\n  range.setStart(node, 0)\n  range.setEnd(node, 0)\n  const rects = range.getClientRects()\n  return rects[0]\n}\n\nfunction findFirstLineRectInElement(element: Element): Rect | undefined {\n  if (element.nodeName === 'BR') {\n    return element.getBoundingClientRect()\n  }\n\n  const rect = getClientRect(element)\n  const style = element.ownerDocument.defaultView?.getComputedStyle(element)\n  const marginLeft = style && Number.parseInt(style.marginLeft, 10) || 0\n  const marginRight = style && Number.parseInt(style.marginRight, 10) || 0\n  const left = rect.left - marginLeft\n  const right = rect.right + marginRight\n\n  const lineHeight = style && Number.parseInt(style.lineHeight, 10) || 24\n  const paddingTop = style && Number.parseInt(style.paddingTop, 10) || 0\n  const borderTop = style && Number.parseInt(style.borderTopWidth, 10) || 0\n  const top = rect.top + paddingTop + borderTop\n  const bottom = top + lineHeight\n\n  return { top, bottom, left, right }\n}\n\nfunction fulfillRect({ top, right, bottom, left }: Rect) {\n  return { top, right, bottom, left, width: right - left, height: bottom - top, x: left, y: top }\n}\n\n// A fallback rect that is far away from the screen. It should not be used through.\nconst fallbackRect = Object.freeze({\n  top: -9999,\n  right: -9999,\n  bottom: -9999,\n  left: -9999,\n  width: 0,\n  height: 0,\n  x: -9999,\n  y: -9999,\n})\n","import {\n  createComputed,\n  createSignal,\n  useAttribute,\n  type ConnectableElement,\n  type ReadonlySignal,\n  type SetupOptions,\n} from '@aria-ui/core'\nimport { useOverlayPositionerState } from '@aria-ui/overlay/elements'\nimport { usePresence } from '@aria-ui/presence'\nimport type { VirtualElement } from '@floating-ui/dom'\nimport type { Editor } from '@prosekit/core'\n\nimport { useEditorExtension } from '../../../hooks/use-editor-extension'\nimport { useScrolling } from '../../../hooks/use-scrolling'\nimport {\n  blockPopoverContext,\n  draggingContext,\n  type BlockPopoverContext,\n  type HoverState,\n} from '../context'\n\nimport {\n  defineElementHoverHandler,\n  type ElementHoverHandler,\n} from './pointer-move'\nimport type {\n  BlockHandlePopoverEvents,\n  BlockHandlePopoverProps,\n} from './types'\n\n/**\n * @internal\n */\nexport function useBlockHandlePopover(\n  host: ConnectableElement,\n  { state, emit }: SetupOptions<BlockHandlePopoverProps, BlockHandlePopoverEvents>,\n): void {\n  const { editor, ...overlayState } = state\n  const reference = createSignal<VirtualElement | null>(null)\n  useOverlayPositionerState(host, overlayState, { reference })\n\n  const context = createSignal<BlockPopoverContext>(null)\n  blockPopoverContext.provide(host, context)\n\n  const dragging = createSignal(false)\n  draggingContext.provide(host, dragging)\n\n  const scrolling = useScrolling(host)\n  const open = createComputed(() => {\n    return !!context.get() && !scrolling.get()\n  })\n\n  useHoverExtension(host, editor, (referenceValue, hoverState) => {\n    reference.set(referenceValue)\n    context.set(hoverState)\n    const stateChangeDetails = hoverState ? { node: hoverState.node, pos: hoverState.pos } : null\n    emit('stateChange', stateChangeDetails)\n  })\n\n  useAttribute(host, 'data-state', () => (open.get() ? 'open' : 'closed'))\n  usePresence(host, open)\n}\n\nfunction useHoverExtension(\n  host: ConnectableElement,\n  editor: ReadonlySignal<Editor | null>,\n  handler: ElementHoverHandler,\n) {\n  let prevHoverState: HoverState | null = null\n\n  const extension = defineElementHoverHandler((reference, hoverState) => {\n    if (isHoverStateEqual(prevHoverState, hoverState)) {\n      return\n    }\n\n    prevHoverState = hoverState\n    handler(reference, hoverState)\n  })\n\n  useEditorExtension(host, editor, extension)\n}\n\nfunction isHoverStateEqual(a: HoverState | null, b: HoverState | null) {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return a.pos === b.pos && a.node.eq(b.node)\n}\n","import type {\n  EventDeclarations,\n  PropDeclarations,\n} from '@aria-ui/core'\nimport {\n  overlayPositionerEvents,\n  overlayPositionerProps,\n  type OverlayPositionerEvents,\n  type OverlayPositionerProps,\n} from '@aria-ui/overlay/elements'\nimport type { Placement } from '@floating-ui/dom'\nimport type { Editor } from '@prosekit/core'\nimport type { ProseMirrorNode } from '@prosekit/pm/model'\n\nexport interface BlockHandlePopoverProps extends Omit<OverlayPositionerProps, 'placement' | 'hoist' | 'flip' | 'shift' | 'hide'> {\n  /**\n   * The ProseKit editor instance.\n   *\n   * @default null\n   * @hidden\n   */\n  editor: Editor | null\n\n  /**\n   * The placement of the popover, relative to the hovered block.\n   *\n   * @default \"left\"\n   */\n  placement: Placement\n\n  /**\n   * Whether to use the browser [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API)\n   * to place the floating element on top of other page content.\n   *\n   * @default false\n   */\n  hoist: boolean\n\n  /**\n   * @default false\n   * @hidden\n   */\n  flip: boolean\n\n  /**\n   * @default false\n   * @hidden\n   */\n  shift: boolean\n\n  /**\n   * @default true\n   * @hidden\n   */\n  hide: boolean\n}\n\n/** @internal */\nexport const blockHandlePopoverProps: PropDeclarations<BlockHandlePopoverProps> = {\n  ...overlayPositionerProps,\n  editor: { default: null },\n  placement: { default: 'left' },\n\n  // Enabling `hoist` will cause the popover to have a small delay when\n  // scrolling the page.\n  hoist: { default: false },\n\n  flip: { default: false },\n  shift: { default: false },\n  hide: { default: true },\n}\n\nexport interface BlockHandlePopoverEvents extends OverlayPositionerEvents {\n  /**\n   * Fired when the hovered block changes.\n   */\n  stateChange: CustomEvent<{ node: ProseMirrorNode; pos: number } | null>\n}\n\n/** @internal */\nexport const blockHandlePopoverEvents: EventDeclarations<BlockHandlePopoverEvents> = {\n  ...overlayPositionerEvents,\n  stateChange: {},\n}\n","import { defineCustomElement, registerCustomElement, type BaseElementConstructor } from \"@aria-ui/core\"\n\nimport { useBlockHandlePopover } from \"./setup\"\nimport { blockHandlePopoverEvents, blockHandlePopoverProps, type BlockHandlePopoverEvents, type BlockHandlePopoverProps } from \"./types\"\n\nconst BlockHandlePopoverElementBase: BaseElementConstructor<BlockHandlePopoverProps> = defineCustomElement<\n  BlockHandlePopoverProps,\n  BlockHandlePopoverEvents\n>({\n  props: blockHandlePopoverProps,\n  events: blockHandlePopoverEvents,\n  setup: useBlockHandlePopover,\n})\nclass BlockHandlePopoverElement extends BlockHandlePopoverElementBase {}\n\nregisterCustomElement('prosekit-block-handle-popover', BlockHandlePopoverElement)\n  \nexport { BlockHandlePopoverElement }\n"],"mappings":"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"}