name: CI

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Lint
        run: pnpm run lint

      - name: Lint vue examples
        run: |
          cd playground 
          pnpm run lint:vue

      - name: Lint svelte examples
        run: |
          cd playground 
          pnpm run lint:svelte

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Typecheck
        run: pnpm run typecheck

  test-unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Install Playwright
        run: pnpm run test:install

      - name: Run unit tests
        run: pnpm run test:coverage

  test-e2e:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Install Playwright
        run: pnpm run test:install

      - name: Run e2e tests
        run: pnpm run test:e2e --shard="${{ matrix.shard }}/3"

  build:
    runs-on: ubuntu-latest

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Build
        run: pnpm run build:package

  linkcheck:
    runs-on: ubuntu-latest

    # Wait for the deploy job to complete. This should help reduce Vercel's 429
    # Too Many Requests errors.
    needs: [deploy]

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Build without clean URLs
        run: pnpm run build:website
        env:
          PROSEKIT_NO_CLEAN_URLS: 'yes'

      - name: Check links
        uses: lycheeverse/lychee-action@v1.10.0
        with:
          args: --base ./website/dist --no-progress './website/dist/**/*.html' --include-fragments
          fail: true

  deploy:
    runs-on: ubuntu-latest

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Build
        run: pnpm run build:website

      # When deploying to Netlify, sometimes the build fails with 422 Unprocessable
      # Entity error. I suspect it's because I deploy the same content in a short time.
      # As a workaround, a unique file is created for each build.
      - name: Add random file
        run: |
          uuidgen >> ./website/dist/build.log
          date >> ./website/dist/build.log

      - name: Deploy to Netlify
        id: deploy-1
        uses: nwtgck/actions-netlify@v3.0
        continue-on-error: true
        with:
          publish-dir: './website/dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          enable-pull-request-comment: true
          enable-commit-comment: false
          enable-commit-status: false
          overwrites-pull-request-comment: true
          alias: ${{ github.head_ref }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEBSITE_SITE_ID }}
        timeout-minutes: 5

      - name: Add random file (retry)
        if: steps.deploy-1.outcome == 'failure'
        run: |
          sleep 30
          uuidgen >> ./website/dist/build.log
          date >> ./website/dist/build.log

      - name: Deploy to Netlify (retry)
        id: deploy-2
        if: steps.deploy-1.outcome == 'failure'
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './website/dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions (retry)'
          enable-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
          overwrites-pull-request-comment: true
          alias: ${{ github.head_ref }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEBSITE_SITE_ID }}
        timeout-minutes: 5
