{"version":3,"file":"create-component-CBvs05W1.js","names":["cleanups: VoidFunction[]","properties: Record<string, unknown>","attributes: Record<string, unknown>","eventHandlers: Record<string, AnyFunction>","fixedEventHandlers: Record<string, AnyFunction>"],"sources":["../src/components/merge-refs.ts","../src/components/create-component.ts"],"sourcesContent":["import type { Ref } from 'react'\n\n/**\n * Assigns a value to a ref.\n * @returns The ref cleanup callback, if any.\n */\nfunction assignRef<T>(\n  ref: Ref<T> | undefined,\n  value: T | null,\n): VoidFunction | undefined | void {\n  if (typeof ref === 'function') {\n    return ref(value)\n  } else if (ref) {\n    ref.current = value\n  }\n}\n\n/**\n * Merges multiple refs into a single one.\n */\nexport function mergeRefs<T>(refs: (Ref<T> | undefined)[]): Ref<T> {\n  return (value: T | null) => {\n    const cleanups: VoidFunction[] = []\n\n    for (const ref of refs) {\n      const cleanup = assignRef(ref, value)\n      const isCleanup = typeof cleanup === 'function'\n      cleanups.push(isCleanup ? cleanup : () => assignRef(ref, null))\n    }\n\n    return () => {\n      for (const cleanup of cleanups) cleanup()\n    }\n  }\n}\n","import type { AnyFunction } from '@prosekit/core'\nimport {\n  createElement,\n  forwardRef,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ForwardRefExoticComponent,\n  type HTMLAttributes,\n  type RefAttributes,\n} from 'react'\n\nimport { useEditorContext } from '../contexts/editor-context'\n\nimport { mergeRefs } from './merge-refs'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport function createComponent<\n  Props extends object,\n  CustomElement extends HTMLElement,\n>(\n  tagName: string,\n  displayName: string,\n  propNames: string[],\n  eventNames: string[],\n): ForwardRefExoticComponent<\n  Partial<Props> & RefAttributes<CustomElement> & HTMLAttributes<CustomElement>\n> {\n  const hasEditor = propNames.includes('editor')\n  const lowerCaseEventNameMap = new Map(\n    eventNames.map((name) => [name.toLowerCase(), name]),\n  )\n\n  const Component = forwardRef<any, any>((props: Props, ref) => {\n    const [el, setEl] = useState<HTMLElement | null>(null)\n\n    const properties: Record<string, unknown> = {}\n    const attributes: Record<string, unknown> = {}\n    const eventHandlersRef = useRef<Record<string, AnyFunction>>({})\n    const eventHandlers: Record<string, AnyFunction> = {}\n\n    for (const [name, value] of Object.entries(props)) {\n      if (value === undefined) {\n        continue\n      }\n\n      if (propNames.includes(name)) {\n        properties[name] = value\n        continue\n      }\n\n      if (name.startsWith('on')) {\n        const lowerCaseEventName = name.slice(2).toLowerCase()\n        const eventName = lowerCaseEventNameMap.get(lowerCaseEventName)\n        if (eventName) {\n          const extractDetail = eventName.endsWith('Change')\n          eventHandlers[eventName] = (event: Event) => {\n            const handler = value as AnyFunction | null\n            if (typeof handler === 'function') {\n              handler(extractDetail ? (event as CustomEvent).detail : event)\n            }\n          }\n          continue\n        }\n      }\n\n      if (name === 'className') {\n        attributes['class'] = value\n      } else {\n        attributes[name] = value\n      }\n    }\n\n    const editor = useEditorContext()\n\n    if (hasEditor && editor && !properties['editor']) {\n      properties['editor'] = editor\n    }\n\n    // Set all properties.\n    useIsomorphicLayoutEffect(() => {\n      if (!el) return\n      for (const [name, value] of Object.entries(properties)) {\n        if (value !== undefined) {\n          // @ts-expect-error: we know that name is a valid property name\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, react-compiler/react-compiler\n          el[name] = value as unknown as any\n        }\n      }\n    }, [el, ...propNames.map((name) => properties[name])])\n\n    // Put all event listeners extracted from `props` into `eventHandlersRef`.\n    useIsomorphicLayoutEffect(() => {\n      eventHandlersRef.current = eventHandlers\n    })\n\n    // Register the event listeners to the element.\n    useIsomorphicLayoutEffect(() => {\n      if (!el) {\n        return\n      }\n\n      const fixedEventHandlers: Record<string, AnyFunction> = {}\n\n      for (const eventName of eventNames) {\n        fixedEventHandlers[eventName] = (event: Event) => {\n          eventHandlersRef.current[eventName]?.(event)\n        }\n      }\n\n      for (const [name, handler] of Object.entries(fixedEventHandlers)) {\n        el.addEventListener(name, handler)\n      }\n\n      return () => {\n        for (const [name, handler] of Object.entries(fixedEventHandlers)) {\n          el.removeEventListener(name, handler)\n        }\n      }\n    }, [el])\n\n    const mergedRef = useMemo(() => mergeRefs([ref, setEl]), [ref])\n\n    return createElement(tagName, { ...attributes, ref: mergedRef })\n  })\n\n  Component.displayName = displayName\n\n  return Component\n}\n"],"mappings":";;;;;;;;AAMA,SAAS,UACP,KACA,OACiC;AACjC,KAAI,OAAO,QAAQ,WACjB,QAAO,IAAI,MAAM;UACR,IACT,KAAI,UAAU;;;;;AAOlB,SAAgB,UAAa,MAAsC;AACjE,SAAQ,UAAoB;EAC1B,MAAMA,WAA2B,EAAE;AAEnC,OAAK,MAAM,OAAO,MAAM;GACtB,MAAM,UAAU,UAAU,KAAK,MAAM;GACrC,MAAM,YAAY,OAAO,YAAY;AACrC,YAAS,KAAK,YAAY,gBAAgB,UAAU,KAAK,KAAK,CAAC;;AAGjE,eAAa;AACX,QAAK,MAAM,WAAW,SAAU,UAAS;;;;;;;ACb/C,MAAM,4BAA4B,OAAO,WAAW,cAAc,kBAAkB;AAEpF,SAAgB,gBAId,SACA,aACA,WACA,YAGA;CACA,MAAM,YAAY,UAAU,SAAS,SAAS;CAC9C,MAAM,wBAAwB,IAAI,IAChC,WAAW,KAAK,SAAS,CAAC,KAAK,aAAa,EAAE,KAAK,CAAC,CACrD;CAED,MAAM,YAAY,YAAsB,OAAc,QAAQ;EAC5D,MAAM,CAAC,IAAI,SAAS,SAA6B,KAAK;EAEtD,MAAMC,aAAsC,EAAE;EAC9C,MAAMC,aAAsC,EAAE;EAC9C,MAAM,mBAAmB,OAAoC,EAAE,CAAC;EAChE,MAAMC,gBAA6C,EAAE;AAErD,OAAK,MAAM,CAAC,MAAM,UAAU,OAAO,QAAQ,MAAM,EAAE;AACjD,OAAI,UAAU,OACZ;AAGF,OAAI,UAAU,SAAS,KAAK,EAAE;AAC5B,eAAW,QAAQ;AACnB;;AAGF,OAAI,KAAK,WAAW,KAAK,EAAE;IACzB,MAAM,qBAAqB,KAAK,MAAM,EAAE,CAAC,aAAa;IACtD,MAAM,YAAY,sBAAsB,IAAI,mBAAmB;AAC/D,QAAI,WAAW;KACb,MAAM,gBAAgB,UAAU,SAAS,SAAS;AAClD,mBAAc,cAAc,UAAiB;MAC3C,MAAM,UAAU;AAChB,UAAI,OAAO,YAAY,WACrB,SAAQ,gBAAiB,MAAsB,SAAS,MAAM;;AAGlE;;;AAIJ,OAAI,SAAS,YACX,YAAW,WAAW;OAEtB,YAAW,QAAQ;;EAIvB,MAAM,SAAS,kBAAkB;AAEjC,MAAI,aAAa,UAAU,CAAC,WAAW,UACrC,YAAW,YAAY;AAIzB,kCAAgC;AAC9B,OAAI,CAAC,GAAI;AACT,QAAK,MAAM,CAAC,MAAM,UAAU,OAAO,QAAQ,WAAW,CACpD,KAAI,UAAU,OAGZ,IAAG,QAAQ;KAGd,CAAC,IAAI,GAAG,UAAU,KAAK,SAAS,WAAW,MAAM,CAAC,CAAC;AAGtD,kCAAgC;AAC9B,oBAAiB,UAAU;IAC3B;AAGF,kCAAgC;AAC9B,OAAI,CAAC,GACH;GAGF,MAAMC,qBAAkD,EAAE;AAE1D,QAAK,MAAM,aAAa,WACtB,oBAAmB,cAAc,UAAiB;AAChD,qBAAiB,QAAQ,aAAa,MAAM;;AAIhD,QAAK,MAAM,CAAC,MAAM,YAAY,OAAO,QAAQ,mBAAmB,CAC9D,IAAG,iBAAiB,MAAM,QAAQ;AAGpC,gBAAa;AACX,SAAK,MAAM,CAAC,MAAM,YAAY,OAAO,QAAQ,mBAAmB,CAC9D,IAAG,oBAAoB,MAAM,QAAQ;;KAGxC,CAAC,GAAG,CAAC;EAER,MAAM,YAAY,cAAc,UAAU,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;AAE/D,SAAO,cAAc,SAAS;GAAE,GAAG;GAAY,KAAK;GAAW,CAAC;GAChE;AAEF,WAAU,cAAc;AAExB,QAAO"}